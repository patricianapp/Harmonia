diff --git a/node_modules/metadata-filter/dist/filter.d.ts b/node_modules/metadata-filter/dist/filter.d.ts
new file mode 100644
index 0000000..cb8ed70
--- /dev/null
+++ b/node_modules/metadata-filter/dist/filter.d.ts
@@ -0,0 +1,107 @@
+/** Declaration file generated by dts-gen */
+
+declare module 'metadata-filter' {
+  export = MetadataFilter;
+  class MetadataFilter {
+
+      constructor(...args: any[]);
+
+      append(...args: any[]): MetadataFilter;
+
+      appendFilters(...args: any[]): void;
+
+      createFilters(...args: any[]): void;
+
+      extend(...args: any[]): void;
+
+      filterField(...args: any[]): string;
+
+      filterText(...args: any[]): void;
+
+      static ALL_FIELDS: string[];
+
+      static CLEAN_EXPLICIT_FILTER_RULES: {
+          source: RegExp;
+          target: string;
+      }[];
+
+      static FEATURE_FILTER_RULES: {
+          source: RegExp;
+          target: string;
+      }[];
+
+      static LIVE_FILTER_RULES: {
+          source: RegExp;
+          target: string;
+      }[];
+
+      static NORMALIZE_FEATURE_FILTER_RULES: {
+          source: RegExp;
+          target: string;
+      }[];
+
+      static REMASTERED_FILTER_RULES: {
+          source: RegExp;
+          target: string;
+      }[];
+
+      static SUFFIX_FILTER_RULES: {
+          source: RegExp;
+          target: string;
+      }[];
+
+      static VERSION_FILTER_RULES: {
+          source: RegExp;
+          target: string;
+      }[];
+
+      static YOUTUBE_TRACK_FILTER_RULES: {
+          source: RegExp;
+          target: string;
+      }[];
+
+      static albumArtistFromArtist(...args: any[]): void;
+
+      static assertFilterFunctionIsValid(...args: any[]): void;
+
+      static decodeHtmlEntities(...args: any[]): void;
+
+      static filterWithFilterRules(...args: any[]): void;
+
+      static fixTrackSuffix(...args: any[]): void;
+
+      static getAmazonFilter(...args: any[]): void;
+
+      static getDefaultFilter(...args: any[]): void;
+
+      static getRemasteredFilter(...args: any[]): void;
+
+      static getSpotifyFilter(...args: any[]): void;
+
+      static getTidalFilter(...args: any[]): void;
+
+      static getYoutubeFilter(...args: any[]): MetadataFilter;
+
+      static normalizeFeature(...args: any[]): void;
+
+      static removeCleanExplicit(...args: any[]): void;
+
+      static removeFeature(...args: any[]): void;
+
+      static removeLive(...args: any[]): void;
+
+      static removeRemastered(...args: any[]): void;
+
+      static removeVersion(...args: any[]): void;
+
+      static removeZeroWidth(...args: any[]): void;
+
+      static replaceNbsp(...args: any[]): void;
+
+      static trim(...args: any[]): void;
+
+      static youtube(text: string): string;
+  }
+
+}
+
